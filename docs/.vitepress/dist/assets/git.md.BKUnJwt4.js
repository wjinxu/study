import{_ as e,c as o,o as r,ae as i}from"./chunks/framework.BQcVUm0h.js";const _=JSON.parse('{"title":"git","description":"","frontmatter":{"title":"git","editLink":true,"layout":"doc"},"headers":[],"relativePath":"git.md","filePath":"git.md"}'),s={name:"git.md"};function c(n,t,a,l,d,p){return r(),o("div",null,t[0]||(t[0]=[i('<p>111</p><h3 id="git-提交" tabindex="-1">git 提交 <a class="header-anchor" href="#git-提交" aria-label="Permalink to &quot;git 提交&quot;">​</a></h3><p>以下文字来源于通义千问</p><ul><li><p><strong>feat (Feature)</strong>: 用于表示新功能的开发。当提交包含新的用户特性或者增强现有功能时使用此标签。例如：<code>feat: 添加用户搜索功能</code></p></li><li><p><strong>refactor</strong>: 当代码重构并不改变其外部行为时使用此标签。重构可能包括改进代码结构、提高性能或者简化复杂度。例如：<code>refactor: 重构登录模块以减少重复代码</code></p></li><li><p><strong>docs</strong>: 仅涉及文档更改（如README文件、API文档等）而不影响代码逻辑时使用此标签。例如：<code>docs: 更新安装指南</code></p></li><li><p><strong>style</strong>: 不影响代码含义的改动，比如空格、格式化、分号等。例如：<code>style: 调整缩进风格</code></p></li><li><p><strong>chore</strong>: 进行构建过程或辅助工具的更新，如打包工具配置、依赖版本升级等。例如：<code>chore: 升级到Webpack 5</code></p></li><li><p><strong>perf (Performance)</strong>: 专门针对性能优化的提交。例如：<code>perf: 减少主页面加载时间</code></p></li><li><p><strong>test</strong>: 增加缺少的测试、修正现有的测试。例如：<code>test: 添加单元测试覆盖新功能</code></p></li><li><p><strong>ci (Continuous Integration)</strong>: 修改持续集成相关的配置文件或脚本。例如：<code>ci: 配置Travis CI环境变量</code></p></li><li><p><strong>build</strong>: 影响构建系统或外部依赖关系的更改。例如：<code>build: 添加Babel编译支持</code></p></li><li><p><strong>revert</strong>: 撤销之前的提交。通常会直接跟上被撤销提交的哈希值或标题。例如：<code>revert: &quot;feat: 添加用户搜索功能&quot;</code></p></li></ul>',4)]))}const u=e(s,[["render",c]]);export{_ as __pageData,u as default};
